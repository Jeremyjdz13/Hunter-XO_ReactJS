[{"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/index.js":"1","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/App.js":"2","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/Signup.js":"3","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/UpdateProfile.js":"4","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/Header.js":"5","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ForgotPassword.js":"6","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/Login.js":"7","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/PrivateRoute.js":"8","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileBar.js":"9","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/contexts/AuthContext.js":"10","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/contexts/ProfileContext.js":"11","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/contexts/CharacterContext.js":"12","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/contexts/JournalContext.js":"13","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/firebase.js":"14","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/contexts/GameRulesContext.js":"15","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/NavBar.js":"16","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterComponents/CharacterCards.js":"17","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/GameCharts.js":"18","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/GameMasterComponents/GMDashboard.js":"19","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/JournalComponents/JournalEntryCard.js":"20","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/GameMasterComponents/PlayerCard.js":"21","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterComponents/CharacterCard.js":"22","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/GameRulesComponents/GameBookCards.js":"23","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterComponents/SuccessRoller/SuccessRoller.js":"24","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/JournalComponents/JournalEntryEdit.js":"25","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/ChartComponent/RankChart.js":"26","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/JournalComponents/JournalEntryCardElement.js":"27","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterEdit/CharacterCardEdit.js":"28","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterComponents/SuccessRoller/ChartRanks.js":"29","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterComponents/AccordionComponents/EquipmentCard.js":"30","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterEdit/CharacterEditComponents/PhysicalEdit.js":"31","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterEdit/CharacterEditComponents/ProtoniumCounterEdit.js":"32","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterEdit/CharacterEditComponents/MentalEdit.js":"33","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterEdit/CharacterEditComponents/CombatEdit.js":"34","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterEdit/CharacterEditComponents/LethalCounterEdit.js":"35","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterEdit/CharacterEditComponents/ProfessionalEdit.js":"36","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterComponents/AccordionComponents/List.js":"37","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterEdit/CharacterEditComponents/EquipmentItemsEdit.js":"38","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterEdit/CharacterEditComponents/BashingCounterEdit.js":"39","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterEdit/CharacterEditComponents/MeritsEdit.js":"40","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterEdit/CharacterEditComponents/PowerStuntEdit.js":"41","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterEdit/CharacterEditComponents/FlawsEdit.js":"42","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterEdit/CharacterEditComponents/BackgroundsEdit.js":"43","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterEdit/CharacterEditComponents/PowerEdit.js":"44","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterEdit/CharacterEditComponents/TalismanEdit.js":"45","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterEdit/CharacterEditComponents/PrimaryAttributesEdit.js":"46","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterComponents/AccordionComponents/Value.js":"47","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterComponents/AccordionComponents/Description.js":"48","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterEdit/CharacterEditComponents/SecondaryAttributeEdit.js":"49","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterComponents/SuccessRoller/TalismansRoller.js":"50","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterComponents/SuccessRoller/SuperPowers.js":"51","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterEdit/CharacterEditComponents/NameCardEdit.js":"52","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/GameRulesComponents/GameBookCard.js":"53","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/GameRulesComponents/GameBookEdit.js":"54","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterComponents/AccordionComponents/HealthProtoniumCounters.js":"55","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterComponents/AccordionComponents/PowersTalismansPowerStunts.js":"56","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterComponents/AccordionComponents/SkillsAccordionCard.js":"57","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterComponents/AccordionComponents/BackgroundsMeritsFlaws.js":"58","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/GameRulesComponents/GameBookComponents/Book.js":"59","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterComponents/AccordionComponents/AttributesAccordionCard.js":"60","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/GameRulesComponents/GameBookComponents/PagesEdit.js":"61","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/GameRulesComponents/GameBookComponents/Pages.js":"62","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/GameMasterComponents/PlayerCharactersCard.js":"63","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/GameMasterComponents/CharacterCard.js":"64"},{"size":257,"mtime":1608083345000,"results":"65","hashOfConfig":"66"},{"size":1468,"mtime":1621403658000,"results":"67","hashOfConfig":"66"},{"size":2752,"mtime":1619937703000,"results":"68","hashOfConfig":"66"},{"size":3493,"mtime":1616624291000,"results":"69","hashOfConfig":"66"},{"size":423,"mtime":1615103844000,"results":"70","hashOfConfig":"66"},{"size":2025,"mtime":1609297291000,"results":"71","hashOfConfig":"66"},{"size":2153,"mtime":1616775892000,"results":"72","hashOfConfig":"66"},{"size":454,"mtime":1613678529000,"results":"73","hashOfConfig":"66"},{"size":3197,"mtime":1621633840000,"results":"74","hashOfConfig":"66"},{"size":1897,"mtime":1622231484000,"results":"75","hashOfConfig":"66"},{"size":2137,"mtime":1622150797000,"results":"76","hashOfConfig":"66"},{"size":14881,"mtime":1622588410000,"results":"77","hashOfConfig":"66"},{"size":3873,"mtime":1621282075000,"results":"78","hashOfConfig":"66"},{"size":1254,"mtime":1619812175000,"results":"79","hashOfConfig":"66"},{"size":6807,"mtime":1622154196000,"results":"80","hashOfConfig":"66"},{"size":1001,"mtime":1622154340000,"results":"81","hashOfConfig":"66"},{"size":1455,"mtime":1622151919000,"results":"82","hashOfConfig":"66"},{"size":331,"mtime":1622153962000,"results":"83","hashOfConfig":"66"},{"size":2359,"mtime":1622696702888,"results":"84","hashOfConfig":"66"},{"size":1168,"mtime":1622153377000,"results":"85","hashOfConfig":"66"},{"size":700,"mtime":1622694852310,"results":"86","hashOfConfig":"66"},{"size":5002,"mtime":1619237143000,"results":"87","hashOfConfig":"66"},{"size":1611,"mtime":1622154283000,"results":"88","hashOfConfig":"66"},{"size":19353,"mtime":1619303989000,"results":"89","hashOfConfig":"66"},{"size":2478,"mtime":1620624371000,"results":"90","hashOfConfig":"66"},{"size":18432,"mtime":1611863923000,"results":"91","hashOfConfig":"66"},{"size":1816,"mtime":1620624340000,"results":"92","hashOfConfig":"66"},{"size":37061,"mtime":1620956397000,"results":"93","hashOfConfig":"66"},{"size":350,"mtime":1614889274000,"results":"94","hashOfConfig":"66"},{"size":927,"mtime":1615501625000,"results":"95","hashOfConfig":"66"},{"size":1536,"mtime":1615700050000,"results":"96","hashOfConfig":"66"},{"size":1010,"mtime":1622220837000,"results":"97","hashOfConfig":"66"},{"size":1531,"mtime":1615700051000,"results":"98","hashOfConfig":"66"},{"size":1464,"mtime":1615699959000,"results":"99","hashOfConfig":"66"},{"size":1532,"mtime":1615702076000,"results":"100","hashOfConfig":"66"},{"size":1511,"mtime":1615699997000,"results":"101","hashOfConfig":"66"},{"size":584,"mtime":1615515110000,"results":"102","hashOfConfig":"66"},{"size":2125,"mtime":1615700391000,"results":"103","hashOfConfig":"66"},{"size":1393,"mtime":1615702089000,"results":"104","hashOfConfig":"66"},{"size":1527,"mtime":1615700220000,"results":"105","hashOfConfig":"66"},{"size":2207,"mtime":1620956244000,"results":"106","hashOfConfig":"66"},{"size":1514,"mtime":1615700152000,"results":"107","hashOfConfig":"66"},{"size":1590,"mtime":1615700119000,"results":"108","hashOfConfig":"66"},{"size":1534,"mtime":1615700308000,"results":"109","hashOfConfig":"66"},{"size":2135,"mtime":1615700265000,"results":"110","hashOfConfig":"66"},{"size":757,"mtime":1615573842000,"results":"111","hashOfConfig":"66"},{"size":238,"mtime":1615515164000,"results":"112","hashOfConfig":"66"},{"size":178,"mtime":1615495576000,"results":"113","hashOfConfig":"66"},{"size":746,"mtime":1615573832000,"results":"114","hashOfConfig":"66"},{"size":368,"mtime":1615418529000,"results":"115","hashOfConfig":"66"},{"size":337,"mtime":1615335564000,"results":"116","hashOfConfig":"66"},{"size":2630,"mtime":1615699156000,"results":"117","hashOfConfig":"66"},{"size":1475,"mtime":1621633532000,"results":"118","hashOfConfig":"66"},{"size":3223,"mtime":1615789834000,"results":"119","hashOfConfig":"66"},{"size":3472,"mtime":1615515509000,"results":"120","hashOfConfig":"66"},{"size":1772,"mtime":1615504667000,"results":"121","hashOfConfig":"66"},{"size":1869,"mtime":1615504441000,"results":"122","hashOfConfig":"66"},{"size":1652,"mtime":1615504617000,"results":"123","hashOfConfig":"66"},{"size":2040,"mtime":1621627680000,"results":"124","hashOfConfig":"66"},{"size":1344,"mtime":1615501455000,"results":"125","hashOfConfig":"66"},{"size":1353,"mtime":1614667986000,"results":"126","hashOfConfig":"66"},{"size":561,"mtime":1614665906000,"results":"127","hashOfConfig":"66"},{"size":351,"mtime":1622697243321,"results":"128","hashOfConfig":"66"},{"size":132,"mtime":1622697213398,"results":"129","hashOfConfig":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},"x46ffh",{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"132"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"132"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"132"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"132"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"132"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"132"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"132"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"132"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"132"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"132"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"132"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"132"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"132"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"132"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"132"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"132"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"132"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/index.js",[],["277","278"],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/App.js",["279"],"import React from \"react\"\nimport Signup from \"./Signup\"\nimport { AuthProvider } from \"../contexts/AuthContext\"\nimport { ProfileProvider } from \"../contexts/ProfileContext\"\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport Login from \"./Login\"\nimport PrivateRoute from './PrivateRoute'\nimport ForgotPassword from './ForgotPassword'\nimport UpdateProfile from \"./UpdateProfile\"\nimport Header from \"./Header\"\nimport './css/App.css'\nimport ProfileBar from './ProfileBar'\nimport { CharacterProvider } from \"../contexts/CharacterContext\"\nimport { JournalProvider } from \"../contexts/JournalContext\"\n\nfunction App() {\n\n  return (\n    <div className=\"app-container box border-black\">\n      <Header></Header>\n        <div>\n          <Router>\n            <AuthProvider>\n              <ProfileProvider>\n                <CharacterProvider>\n                    <Switch>\n                      <PrivateRoute path=\"/profile\" component={ProfileBar} />\n                      <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n                      <Route path=\"/login\" component={Login} />\n                      <Route path=\"/signup\" component={Signup} />\n                      <Route path=\"/forgot-password\" component={ForgotPassword} />\n                    </Switch>\n                </CharacterProvider>\n              </ProfileProvider>\n            </AuthProvider>\n          </Router>\n        </div>\n    </div>\n  ) \n}\n\nexport default App;\n","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/Signup.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/UpdateProfile.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/Header.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ForgotPassword.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/Login.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/PrivateRoute.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileBar.js",["280","281","282","283"],"import React, { useState, useEffect } from 'react'\nimport { Alert } from 'react-bootstrap'\nimport { useAuth } from '../contexts/AuthContext'\nimport { Link, useHistory, useRouteMatch, Route, Switch} from 'react-router-dom'\nimport { db } from '../firebase'\nimport NavBar from './ProfileContainer/NavBar'\nimport CharacterCards from '../components/ProfileContainer/CharacterComponents/CharacterCards'\nimport GameCharts from './ProfileContainer/GameCharts'\nimport Journal from '../contexts/JournalContext'\nimport GameRules from '../contexts/GameRulesContext'\nimport { useProfile } from '../contexts/ProfileContext'\nimport GMDashboard from './ProfileContainer/GameMasterComponents/GMDashboard'\n\nexport default function ProfileBar() {\n    const [error, setError] = useState(\"\")\n    const { logout, currentUser } = useAuth()\n    const { profileData } = useProfile()\n  \n  \n    const history = useHistory()\n\n    async function handleLogout(){\n        setError('')\n\n        try{\n            await logout()\n            history.push('/login')\n        } catch {\n            setError('Failed to log out')\n        }\n    }\n\n    function handleGMDisplay(){\n        \n        if(profileData?.gameMaster == false){\n            console.log(\"not GM\")\n            return (\n                <div>\n                    Player\n                </div>\n            )\n        }\n\n        return (\n            <div>\n                GM\n            </div>\n        )\n        \n    }\n\n    function handleGMProfileRoute(){\n        if(profileData?.gameMaster == false){\n            console.log(\"not GM\")\n            return;\n        }\n\n        return <Route path={`${match.path}/gmdashboard`} component={GMDashboard} />\n    }\n    \n    const match = useRouteMatch()\n\n    return (\n       <>\n            <div>\n                <div className=\"cRow profilebar\">\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\n                    <div className=\"\">\n                        <div ><strong>Profile:</strong> <span className=\"profile-name\">{currentUser.displayName}</span></div>     \n                        <div><strong>Email:</strong> <span className=\"profile-name\">{currentUser.email}</span> </div> \n                    </div>\n                    <div>\n                        <NavBar />\n                    </div>\n                    <span>{handleGMDisplay()}</span>\n                    <div className=\"profilebar-links\">\n                        <Link className=\"profile-link\" to=\"/update-profile\" >Update Profile</Link>\n                        <Link className=\"profile-link\" onClick={handleLogout}>Log Out</Link>\n                    </div>\n                </div>\n                <div>\n                    <Switch>\n                        {handleGMProfileRoute()}\n                        <Route path={`${match.path}/characters`} component={CharacterCards} />\n                        <Route path={`${match.path}/journal`} component={Journal} />  \n                        <Route path={`${match.path}/game_charts`} component={GameCharts} />\n                        <Route path={`${match.path}/game_rules`} component={GameRules} />\n                    </Switch>   \n                </div>\n            </div>\n       </>\n    )\n}\n","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/contexts/AuthContext.js",["284"],"import React, { useContext, useState, useEffect } from 'react'\nimport { auth, db } from '../firebase'\n\n\n\n\nconst AuthContext = React.createContext()\n\nexport default AuthContext;\n\nexport function useAuth() {\n    return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n    const [currentUser, setCurrentUser] = useState()\n    const [loading, setLoading] = useState(true)\n  \n\n    async function signup(email, password, displayName) {\n      \n        const userCredential = await auth.createUserWithEmailAndPassword(email, password);\n        \n         await userCredential.user.updateProfile({\n            displayName: displayName\n        })\n        return userCredential;\n    }\n\n    function login(email, password){\n        return auth.signInWithEmailAndPassword(email, password)\n    }\n\n    function logout(){\n       return auth.signOut()\n    }\n\n    function resetPassword(email){\n        return auth.sendPasswordResetEmail(email)\n    }\n\n    function updateEmail(email){\n        return currentUser.updateEmail(email)\n    }\n    function updatePassword(password){\n        return currentUser.updatePassword(password)\n    }\n\n    async function updateDisplayName(newDisplayName){\n    \n       await auth.currentUser.updateProfile({\n            displayName: newDisplayName\n        })\n       await auth.currentUser.reload()\n    }\n\n\n    useEffect(() => auth.onAuthStateChanged(user => {\n        \n        if(!user){\n            setLoading(false)\n            return;\n        } \n\n        setCurrentUser(user) \n        setLoading(false)\n\n    }), []);\n\n    const value = {\n        currentUser,\n        loading,\n        login,\n        signup,\n        logout,\n        resetPassword,\n        updateEmail,\n        updatePassword,\n        updateDisplayName\n    }\n\n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    )\n}\n","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/contexts/ProfileContext.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/contexts/CharacterContext.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/contexts/JournalContext.js",["285","286"],"import React, {useState, useEffect, useContext } from 'react'\nimport { useAuth } from './AuthContext'\nimport { db } from '../firebase'\nimport { v4 as uuidv4 } from 'uuid'\nimport JournalEntryCard from '../components/ProfileContainer/JournalComponents/JournalEntryCard'\n\nexport const JournalContext = React.createContext()\n\nexport default function JournalProvider() {\n    const { currentUser, loading: loadingUser } = useAuth()\n    const [selectedJournalId, setSelectedJournalId] = useState()\n    const [journalEntries, setJournalEntries] = useState()\n    const selectedJournal = journalEntries?.find(journal => journal.id === selectedJournalId)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n     \n        if(loadingUser){\n            return; //Still initializing, do nothing.\n        }\n\n        if(!currentUser){\n            setJournalEntries(null)\n            return;\n        }\n\n        const journalRef = db.ref(`users/${currentUser.uid}/journal`);\n\n        const listener = journalRef.on('value', snapshot => {\n            if(!snapshot.exists()){\n                // no character data found, create from template\n                snapshot.ref\n                .set(JSON.stringify(journalTemplate)) // This will refire the listener if successful.\n                .catch((error) => console.log(\"Failed to initialize default journal\", error));\n                // setLoading(false)\n                return;\n            }\n            setJournalEntries(JSON.parse(snapshot.val()));\n            // setLoading(false);\n        });\n\n        return () => journalRef.off('value', listener);\n        // console.log('Testing Journal')\n        // setLoading(false)\n\n    },[currentUser, loadingUser])\n\n\n    function handleJournalEntrySelect(id){\n        setSelectedJournalId(id)\n    }\n\n\n    function handleJournalEntryAdd(){\n        const newDate = new Date().getTime().toString()\n        const newJournalEntry = {\n            id: uuidv4(),\n            title: \"Entry Title\",\n            body: 'Notes',\n            creationDate: newDate,\n            editDate: newDate\n        }\n        const addJournal = [...journalEntries, newJournalEntry]\n        setSelectedJournalId(newJournalEntry.id)\n        db.ref(`users/` + currentUser.uid).child(\"/journal\").set(JSON.stringify(addJournal))\n        console.log(\"Journal changes updated and saved to firebase.\")\n\n    }\n\n    function handleJournalEntryDelete(id) {\n\n        if(selectedJournalId != null && selectedJournalId === id){\n            setSelectedJournalId(undefined)\n        }\n        // setJournalEntries(journalEntries.filter(journalEntry => journalEntry.id !== id))\n        db.ref(`users/${currentUser.uid}`).child('/journal').set(JSON.stringify(journalEntries.filter(journalEntry => journalEntry.id !== id)))\n    }\n\n    function handleJournalEntryChange(id, journalEntry){\n        const newJournalEntries = [ ...journalEntries ] //Makes a copy of JournalEntries\n        const index = newJournalEntries.findIndex(j => j.id === id)\n        newJournalEntries[index] = journalEntry\n        // setJournalEntries(newJournalEntries)\n        db.ref(`users/` + currentUser.uid).child(\"/journal\").set(JSON.stringify(newJournalEntries))\n    }\n\n    const journalContextValue = {\n        journalEntries,\n        selectedJournal,\n        loading,\n        handleJournalEntryAdd,\n        handleJournalEntryDelete,\n        handleJournalEntrySelect,\n        handleJournalEntryChange\n    }\n\n    return (\n        <JournalContext.Provider value={journalContextValue} >\n            <JournalEntryCard journalEntries={journalEntries} selectedJournal={selectedJournal} />\n        </JournalContext.Provider>\n    )\n}\n\nconst journalTemplate = [\n    {\n        id: uuidv4(),\n        title: \"Entry Title\",\n        body: 'Notes',\n        creationDate: new Date().getTime().toString(),\n        editDate: new Date().getTime().toString()\n    }\n]\n","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/firebase.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/contexts/GameRulesContext.js",["287"],"import React, {useState, useEffect } from 'react'\nimport { v4 as uuidv4 } from 'uuid'\nimport GameBookCards from '../components/ProfileContainer/GameRulesComponents/GameBookCards'\nimport { useAuth } from './AuthContext'\nimport { db } from '../firebase'\n\nexport const GameRulesContext = React.createContext()\n\nexport default function GameRules() {\n    const { currentUser } = useAuth()\n    const [selectedGameRuleId, setSelectedGameRuleId] = useState()\n    const [selectedGameBookId, setSelectedGameBookId] = useState()\n    const [gameRules, setGameRules] = useState()\n    const selectedRule = gameRules?.find(rule => rule.id === selectedGameRuleId)\n    const selectedBook = gameRules?.find(rule => rule.id === selectedGameBookId)\n\n    useEffect(() => {\n  \n        if(!currentUser){\n            setGameRules(null);\n            return;\n        }\n        const gameRules = db.ref(`rulebooks/`);\n\n        const listener = gameRules.on('value', snapshot => {\n            if(!snapshot.exists()){\n                snapshot.ref\n                .set(JSON.stringify(books))\n                .catch((error) => {\n                    console.log(\"Failed to initialize default books.\", error);\n                })\n                return;\n            }\n            setGameRules(JSON.parse(snapshot.val()));\n        })\n        return () => gameRules.off('value', listener)\n    },[])\n\n\n    const gameRulesContextValue = {\n        handleGameBookDelete,\n        handleGameRuleSelect,\n        handleGameBookSelect,\n        handleGameRuleChange,\n        handleGameBookAdd\n    }\n\n    function handleGameRuleSelect(id){\n        setSelectedGameRuleId(id)\n    }\n\n    function handleGameBookSelect(id){\n        setSelectedGameBookId(id)\n    }\n\n    function handleGameBookDelete(id) {\n\n        if(selectedGameRuleId != null && selectedGameRuleId === id){\n            setSelectedGameRuleId(undefined)\n        }\n        // setGameRules(gameRules.filter(rule => rule.id !== id))\n        db.ref(`rulebooks`).set(JSON.stringify(gameRules.filter(rule => rule.id !== id)))\n    }\n\n    function handleGameBookAdd(){\n        const newBook = {\n            id: uuidv4(),\n            bookTitle: \"Book Title\",\n            mainParagraph: 'Placeholder for a Main Paragraph.',\n            pages: [\n                {\n                    id: uuidv4(),\n                    pageTitle: 'SubTitle placeholder',\n                    paragraph: 'paragraph placeholder'\n                }\n            ]\n        } \n        setSelectedGameRuleId(newBook.id)\n        const addBook = [...gameRules, newBook]\n        // setGameRules([...gameRules, newBook])\n        db.ref(`rulebooks`).set(JSON.stringify(addBook))\n    }\n\n\n    function handleGameRuleChange(id, gameRule){\n        const newGameRules = [ ...gameRules] //Makes a copy of Game rules\n        const index = newGameRules.findIndex(r => r.id === id)\n        newGameRules[index] = gameRule\n        // setGameRules(newGameRules)\n        db.ref(`rulebooks`).set(JSON.stringify(newGameRules))\n    }\n\n    return (\n        <GameRulesContext.Provider value={gameRulesContextValue} >\n            <GameBookCards \n                gameRules={gameRules} \n                selectedRule={selectedRule} \n                selectedBook={selectedBook}\n                />\n           \n        </GameRulesContext.Provider>\n    )\n}\n\nconst books = [\n    {\n        id: uuidv4(),\n        bookTitle: \"XO: ExtraOrdinary\",\n        mainParagraph: \"XO is a super-powers game set in the modern world, where normal people have to cope with not only their mundane lives, but with abilities that most of their fellow men do not have.  But XO is more than just a game; it is an examination of morality, ethics, power and corruption; the human spirit. It intends to bring into question the concepts of Good and Evil, and what makes such a thing ‘good’ for one person, and ‘evil’ for another. And the game is meant to evolve as the choices of the players, and the consequences of those choices, change the world around the characters. The world is a pond, and the larger the splash, the more the ripples are evident everywhere.\",\n        pages:[\n            {\n                id: uuidv4(),\n                pageTitle: 'something',\n                paragraph: 'something for paragraph'\n            }\n        ]\n    },\n    {    \n        id: uuidv4(),\n        bookTitle: \"Character Creation\",\n        mainParagraph: 'Placeholder for Main Paragraph.',\n        pages:[\n            {\n                id: uuidv4(),\n                pageTitle: 'Attributes',\n                paragraph: 'We like attributes'\n            },\n            {\n                id: uuidv4(),\n                pageTitle: 'Powers',\n                paragraph: 'Slide!!!'\n            },\n                \n            {\n                id: uuidv4(),\n                pageTitle: 'Power Stunts',\n                paragraph: 'Lous Tavern'\n            },\n        ]\n    },  \n    { \n        id: uuidv4(),\n        bookTitle: \"Protonium & Powers\",\n        mainParagraph: 'Placeholder for a Main Paragraph.',\n        pages: [\n            {\n                id: uuidv4(),\n                pageTitle: 'SubTitle placeholder',\n                paragraph: 'paragraph placeholder'\n            }\n        ]\n        \n    },\n    {\n        id: uuidv4(),\n        bookTitle: \"Merits\",\n        mainParagraph: 'Placeholder for a Main Paragraph.',\n        pages: [\n            {\n                id: uuidv4(),\n                pageTitle: 'SubTitle placeholder',\n                paragraph: 'paragraph placeholder'\n            }\n        ]\n    },\n    {\n        id: uuidv4(),\n        bookTitle: \"Flaws\",\n        mainParagraph: 'Placeholder for a Main Paragraph.',\n        pages: [\n            {\n                id: uuidv4(),\n                pageTitle: 'SubTitle placeholder',\n                paragraph: 'paragraph placeholder'\n            }\n        ]\n    },\n    {\n        id: uuidv4(),\n        bookTitle: \"Combat\",\n        mainParagraph: 'Placeholder for a Main Paragraph.',\n        pages: [\n            {\n                id: uuidv4(),\n                pageTitle: 'SubTitle placeholder',\n                paragraph: 'paragraph placeholder'\n            }\n        ]\n    },\n    {\n        id: uuidv4(),\n        bookTitle: \"Drugs & Poisons\",\n        mainParagraph: 'Placeholder for a Main Paragraph.',\n        pages: [\n            {\n                id: uuidv4(),\n                pageTitle: 'SubTitle placeholder',\n                paragraph: 'paragraph placeholder'\n            }\n        ]\n    },\n    {\n        id: uuidv4(),\n        bookTitle: \"Inventing\",\n        mainParagraph: 'Placeholder for a Main Paragraph.',\n        pages: [\n            {\n                id: uuidv4(),\n                pageTitle: 'SubTitle placeholder',\n                paragraph: 'paragraph placeholder'\n            }\n        ]\n    }           \n]\n    \n    \n","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/NavBar.js",["288"],"import React from 'react'\nimport { Link, useRouteMatch } from 'react-router-dom'\nimport { useProfile } from '../../contexts/ProfileContext'\n\n\nexport default function NavBar() {\n    const { profileData } = useProfile()\n\n    function handleGMProfileLink(){\n        if(profileData?.gameMaster == false){\n            console.log(\"not GM\")\n            return;\n        }\n\n        return <Link  className=\"gmDashboard-link  link\" to={`${match.url}/gmdashboard`}>GM Dashboard</Link>\n    }\n\n    const match = useRouteMatch()\n    return (\n        <div className=\"nav-bar\">\n            {handleGMProfileLink()}\n            <Link className=\"character-link link\" to={`${match.url}/characters`}>Characters</Link>\n            <Link className=\"link journal-link\" to={`${match.url}/journal`} >Journal</Link>\n            <Link className=\"link\" to={`${match.url}/game_charts`} >Game Charts</Link>\n            <Link className=\"game_rules-link link\" to={`${match.url}/game_rules`} >Game Rules</Link>\n        </div>\n    )\n}\n","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterComponents/CharacterCards.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/GameCharts.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/GameMasterComponents/GMDashboard.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/JournalComponents/JournalEntryCard.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/GameMasterComponents/PlayerCard.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterComponents/CharacterCard.js",["289"],"import React, { useContext } from 'react'\nimport { useCharacter } from '../../../contexts/CharacterContext'\nimport { Card } from 'react-bootstrap'\nimport Accordion from 'react-bootstrap/Accordion'\nimport AttributesAccordionCard from './AccordionComponents/AttributesAccordionCard'\nimport SkillsAccordionCard from './AccordionComponents/SkillsAccordionCard'\nimport BackgroundsMeritsFlaws from './AccordionComponents/BackgroundsMeritsFlaws'\nimport PowersTalismansPowerStunts from './AccordionComponents/PowersTalismansPowerStunts'\nimport HealthProtoniumCounters from './AccordionComponents/HealthProtoniumCounters'\nimport EquipmentCard from './AccordionComponents/EquipmentCard'\n\nexport default function CharacterCard(props) {\n    const {\n        id,\n        name,\n        alias,\n        nature,\n        primaryAttributes,\n        secondaryAttributes,\n        combatSkills,\n        physicalSkills,\n        professionalSkills,\n        mentalSkills,\n        backgrounds,\n        merits,\n        flaws,\n        powers,\n        talismans,\n        powerStunts,\n        bashingCounter,\n        lethalCounter,\n        protoniumCounter,\n        equipmentItems\n    } = props\n\n    const {handleCharacterSelect, handleCharacterSelectSuccessRoller, handleCharacterDelete} = useCharacter()\n\n    function handleDeleteWarning(id, name) {\n        const answer = window.confirm(`\"Are you sure you want to delete? ${name}\"`)\n\n        if(answer){\n            handleCharacterDelete(id)\n        } else{\n\n        }\n        \n    }\n\n    return (\n        <div className=\"left-container\">\n            <div className=\"secondary_buttons-main_container\">\n                <button onClick={() => handleDeleteWarning(id, name) }  className=\"secondary_buttons-main\">Delete</button>\n                <button onClick={() => handleCharacterSelectSuccessRoller(id)}  className=\"secondary_buttons-main\">Fate O'Meter</button>\n                <button onClick={() => handleCharacterSelect(id)}  className=\"secondary_buttons-main\">Edit</button>\n            </div>\n            <Accordion className=\"character-card-accordion_container\">\n                <Card className=\"character-card\">\n                    <Accordion.Toggle as={Card.Header} eventKey=\"0\" className=\"cRow character-card_header\">\n                        <div className=\"cRow\"> \n                            <span className=\"character-card-title\">{name} : {alias}</span> \n                            <span className=\"character-card-title_nature\">Nature</span>\n                            <span className=\"character-card-nature\">{nature}</span>\n                        </div>\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"0\">\n                        <Card.Body className=\"black-background\">\n                            <Accordion className=\"\">\n                                <AttributesAccordionCard \n                                    key={secondaryAttributes.id} \n                                    secondaryAttributes={secondaryAttributes} \n                                    primaryAttributes={primaryAttributes} \n                                />\n                                <SkillsAccordionCard \n                                    key={combatSkills.id}\n                                    combatSkills={combatSkills}\n                                    physicalSkills={physicalSkills}\n                                    professionalSkills={professionalSkills}\n                                    mentalSkills={mentalSkills}\n                                />\n                                <BackgroundsMeritsFlaws\n                                    key={backgrounds.id}\n                                    backgrounds={backgrounds}\n                                    merits={merits}\n                                    flaws={flaws}\n                                />\n                                <PowersTalismansPowerStunts \n                                    key={powers.id}\n                                    powers={powers}\n                                    talismans={talismans}\n                                    powerStunts={powerStunts}\n                                />\n                                <HealthProtoniumCounters\n                                    key={bashingCounter.id}\n                                    bashingCounter={bashingCounter}\n                                    lethalCounter={lethalCounter}\n                                    protoniumCounter={protoniumCounter}\n                                    maxProtonium={secondaryAttributes[5]} \n                                />\n                                <EquipmentCard \n                                    key={equipmentItems.id}\n                                    equipmentItems={equipmentItems}\n                                />\n                            </Accordion>\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            </Accordion>\n        </div>\n    )\n}","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/GameRulesComponents/GameBookCards.js",["290"],"import React, { useContext } from 'react'\nimport { useProfile } from '../../../contexts/ProfileContext'\nimport { GameRulesContext } from '../../../contexts/GameRulesContext'\nimport GameBookCard from './GameBookCard'\nimport GameBookEdit from './GameBookEdit'\nimport Book from './GameBookComponents/Book'\n\nexport default function GameBookCards({ gameRules, selectedRule, selectedBook }) {\n    const { profileData } = useProfile()\n\n    const { handleGameBookAdd } = useContext(GameRulesContext)\n\n    function handleEditDelete(){\n  \n        if (profileData?.editor == false){\n            console.log(profileData?.editor, \"Editing Rights\")\n            return \n\n        }\n\n        return (\n            <div>\n                <button onClick={handleGameBookAdd} className=\"add_button-main\">Add Book</button>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"book-body\">\n            <div className=\"add_button-container\">\n                <div className=\"game_rule_books-title\">Game Rule Books</div>\n                {handleEditDelete()}\n            </div>\n            <div className=\"book_parent-container\">\n                <div className=\"book-grid\">\n                    {gameRules?.map(book => {\n                        return <GameBookCard key={book.id} {...book} gameRules={gameRules} />\n                    })}\n                </div>\n                <div>\n                    {selectedRule && <GameBookEdit selectedRule={selectedRule} /> }\n                    {selectedBook && <Book selectedBook={selectedBook} />}\n                </div>\n            </div>\n            \n        </div>\n    )\n}\n","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterComponents/SuccessRoller/SuccessRoller.js",["291","292"],"import React, { useState } from 'react'\nimport { useCharacter } from '../../../../contexts/CharacterContext' \nimport SuperPowers from './SuperPowers'\nimport TalismansRoller from './TalismansRoller'\nimport ChartRanks from './ChartRanks'\nimport {v4 as uuidv4 } from 'uuid'\n\n\nexport default function SuccessRoller({ character }) {\n    const { handleCharacterSelectSuccessRoller } = useCharacter()\n    const searchIntuition = character.primaryAttributes.filter(item => item.name.includes('Intuition'))\n    const searchFight = character.primaryAttributes.filter(item => item.name.includes('Fight'))\n    const searchAgility = character.primaryAttributes.filter(item => item.name.includes('Agility'))\n    const searchStrength = character.primaryAttributes.filter(item => item.name.includes('Strength'))\n    const searchEndurance = character.primaryAttributes.filter(item => item.name.includes('Endurance'))\n    const searchReason = character.primaryAttributes.filter(item => item.name.includes('Reason'))\n    const searchPsyche = character.primaryAttributes.filter(item => item.name.includes('Psyche'))\n    const searchAlertness = character.mentalSkills.filter(item => (item.name.includes(('Alertness' || 'alertness'))) )\n    let alertCount = ''\n    if (searchAlertness[0] === undefined) {\n            alertCount = 0\n        }else{\n            alertCount = searchAlertness[0].rank\n        }\n      \n    const intuition = searchIntuition[0].rank\n    const initiativeCount = parseInt(intuition, 10) + parseInt(alertCount, 10)\n    const fight = searchFight[0].rank\n    const agility = searchAgility[0].rank\n    const strength = searchStrength[0].rank\n    const endurance = searchEndurance[0].rank\n    const reason = searchReason[0].rank\n    const psyche = searchPsyche[0].rank\n    \n    const [state, setState] = useState({randomD10: 0, D10Roll: 0})\n    const [powerRank, setPowerRank] = useState('No Rank')\n    const [d100, setD100] = useState({randomD100: 0, D100Roll: 0, score: ''})\n    const [count, setCount] = useState(0)\n    const [fate, setFate] = useState()\n    \n   \n    function handleClickD10(){\n        \n       let rTimer = setInterval(()=>{\n    \n           let roll = Math.floor((Math.random() * 10) +1)\n           let total = parseInt(roll) + initiativeCount;\n            setState({ \n                randomD10: total,\n                D10Roll: roll\n            });\n        }, 100)\n\n        setTimeout(()=>{\n            clearInterval(rTimer);\n        }, 2000);\n    }\n    \n\n    function handleRank(e){\n        let value = e.target.value\n        let name = e.target.name\n        console.log({value, name})\n\n        if (value === \"0\"){\n           setPowerRank(\"Decrepit\")\n        } else if (value === \"1\"){\n            setPowerRank(\"Feeble\")\n        } else if (value === \"2\"){\n            setPowerRank(\"Poor\")\n        } else if (value === \"3\"){\n            setPowerRank(\"Typical\")\n        } else if (value === \"4\"){\n            setPowerRank(\"Good\")\n        } else if (value === \"5\"){\n            setPowerRank(\"Excellent\")\n        } else if (value === \"6\"){\n            setPowerRank(\"Remarkable\")\n        } else if (value === \"7\"){\n            setPowerRank(\"Incredible\")\n        } else if (value === \"8\"){\n            setPowerRank(\"Amazing\")\n        } else if (value === \"9\"){\n            setPowerRank(\"Monstrous\")\n        } else if (value === \"10\"){\n            setPowerRank(\"Unearthly\")\n        }\n       \n    }\n\n    function handleClickD100(){\n        let rTimer = setInterval(()=>{\n            let modifiers = count;\n            let roll = Math.floor((Math.random() * 100) +1)\n            let total = parseInt(modifiers) + parseInt(roll);\n            let rank = powerRank;\n            let success = '';\n            console.log(success, rank, total)\n            if (rank === \"Decrepit\"){\n                if (total <= 1){\n                 success = \" botched\";\n                }\n                if (total >= 2 && total <= 55){\n                    success = \" failed\"\n                }\n                if (total >= 56 && total <= 94){\n                    success = \" green\";\n                }\n                if (total >= 95 && total <= 99){\n                success = \" yellow\";\n                }\n                if (total >= 100){\n                success = \" red\";\n                }\n            }\n\n            if (rank === \"Feeble\"){\n                if (total <= 1){\n                 success = \" botched\";\n                }\n                if (total >= 2 && total <= 50){\n                    success = \" failed\"\n                }\n                if (total >= 51 && total <= 90){\n                    success = \" green\";\n                }\n                if (total >= 91 && total <= 99){\n                success = \" yellow\";\n                }\n                if (total >= 100){\n                success = \" red\";\n                }\n            }\n\n            if (rank === \"Poor\"){\n                if (total <= 1){\n                 success = \" botched\";\n                }\n                if (total >= 2 && total <= 45){\n                    success = \" failed\"\n                }\n                if (total >= 46 && total <= 85){\n                    success = \" green\";\n                }\n                if (total >= 86 && total <= 99){\n                success = \" yellow\";\n                }\n                if (total >= 100){\n                success = \" red\";\n                }\n            }\n\n            if (rank === \"Typical\"){\n                if (total <= 1){\n                 success = \" botched\";\n                }\n                if (total >= 2 && total <= 40){\n                    success = \" failed\"\n                }\n                if (total >= 41 && total <= 80){\n                    success = \" green\";\n                }\n                if (total >= 81 && total <= 97){\n                success = \" yellow\";\n                }\n                if (total >= 98){\n                success = \" red\";\n                }\n            }\n\n            if (rank === \"Good\"){\n                if (total <= 1){\n                 success = \" botched\";\n                }\n                if (total >= 2 && total <= 35){\n                    success = \" failed\"\n                }\n                if (total >= 36 && total <= 75){\n                    success = \" green\";\n                }\n                if (total >= 76 && total <= 97){\n                success = \" yellow\";\n                }\n                if (total >= 98){\n                success = \" red\";\n                }\n            }\n\n            if (rank === \"Excellent\"){\n                if (total <= 1){\n                 success = \" botched\";\n                }\n                if (total >= 2 && total <= 30){\n                    success = \" failed\"\n                }\n                if (total >= 31 && total <= 70){\n                    success = \" green\";\n                }\n                if (total >= 71 && total <= 94){\n                success = \" yellow\";\n                }\n                if (total >= 95){\n                success = \" red\";\n                }\n            }\n\n            if (rank === \"Remarkable\"){\n                if (total <= 1){\n                 success = \" botched\";\n                }\n                if (total >= 2 && total <= 25){\n                    success = \" failed\"\n                }\n                if (total >= 26 && total <= 65){\n                    success = \" green\";\n                }\n                if (total >= 66 && total <= 94){\n                success = \" yellow\";\n                }\n                if (total >= 95){\n                success = \" red\";\n                }\n            }\n\n            if (rank === \"Incredible\"){\n                if (total <= 1){\n                 success = \" botched\";\n                }\n                if (total >= 2 && total <= 20){\n                    success = \" failed\"\n                }\n                if (total >= 25 && total <= 60){\n                    success = \" green\";\n                }\n                if (total >= 61 && total <= 90){\n                success = \" yellow\";\n                }\n                if (total >= 91){\n                success = \" red\";\n                }\n            }\n\n            if (rank === \"Amazing\"){\n                if (total <= 1){\n                 success = \" botched\";\n                }\n                if (total >= 2 && total <= 15){\n                    success = \" failed\"\n                }\n                if (total >= 16 && total <= 55){\n                    success = \" green\";\n                }\n                if (total >= 56 && total <= 90){\n                success = \" yellow\";\n                }\n                if (total >= 91){\n                success = \" red\";\n                }\n            }\n\n            if (rank === \"Monstrous\"){\n                if (total <= 1){\n                 success = \" botched\";\n                }\n                if (total >= 2 && total <= 10){\n                    success = \" failed\"\n                }\n                if (total >= 11 && total <= 50){\n                    success = \" green\";\n                }\n                if (total >= 51 && total <= 85){\n                success = \" yellow\";\n                }\n                if (total >= 86){\n                success = \" red\";\n                }\n            }\n\n            if (rank === \"Unearthly\"){\n                if (total <= 1){\n                 success = \" botched\";\n                }\n                if (total >= 2 && total <= 6){\n                    success = \" failed\"\n                }\n                if (total >= 7 && total <= 45){\n                    success = \" green\";\n                }\n                if (total >= 46 && total <= 85){\n                success = \" yellow\";\n                }\n                if (total >= 86){\n                success = \" red\";\n                }\n            }\n          \n            setD100({ \n                randomD100: total,\n                D100Roll: roll,\n                score: success,\n            });\n\n        }, 100)\n   \n        setTimeout(()=>{\n            clearInterval(rTimer);\n        }, 2000);\n        \n    }\n\n    function handleClickAdd(e){\n        let add = e.target.name;\n\n        if (add === \"5\"){\n            setCount(prevCount => prevCount + 5); \n        }\n        if (add === \"1\"){\n            setCount(prevCount => prevCount + 1); \n        }\n        if (add === \"20\"){\n            setCount(prevCount => prevCount + 20); \n        }\n    };\n\n    function handleClickSubtract(e){\n        let subtract = e.target.name;\n\n        if (subtract === \"-5\"){\n            setCount(prevCount => prevCount - 5); \n        }\n        if (subtract === \"-1\"){\n            setCount(prevCount => prevCount - 1); \n        }\n        if (subtract === \"-20\"){\n            setCount(prevCount => prevCount - 20); \n        }\n    }\n    function handleClickReset(){\n     \n        setPowerRank('No Rank')\n        setCount(0)\n        setD100({randomD100: 0, D100Roll: 0, score: ''}) \n    }\n\n    const superPowersElement = character.powers.map(power => {\n        return  <SuperPowers key={power.id} {...power} handleRank={handleRank}/>\n    })\n\n    const talismansElement = character.talismans.map(talisman => {\n        return<TalismansRoller key={talisman.id} {...talisman} handleRank={handleRank}/>\n    \n    })\n\n    const chartColumnsElement = chartColumns.map(column => {\n        return <ChartRanks key={column.id} {...column} handleRank={handleRank} />\n    })\n\n\n    return (\n        <div className=\"sticky-container\">\n            <div className=\"secondary_buttons-main_container\">\n                <h4 className=\"character-name_title\">{character.name}</h4>\n                <button \n                    onClick={() => handleCharacterSelectSuccessRoller(undefined)}\n                    className=\"secondary_buttons-main\"\n                >\n                    Close\n                </button> \n            </div>\n            <div>\n                <div className=\"initiative_container\">\n                    <h3>D*10 Initiative</h3>\n                    <div className=\"d10-grid d10-container\">\n                        <div className=\"column\">\n                            <div className=\"d10-grid_bonus\">\n                               <h5>Intuition:</h5><span className=\"numbers\">{intuition}</span> \n                            </div>\n                            <div className=\"d10-grid_bonus\">\n                               <h5>Alertness:</h5><span className=\"numbers\">{alertCount}</span>\n                            </div>\n                            <div className=\"d10-grid_bonus\">\n                                <h5>Total:</h5><span className=\"numbers\">{initiativeCount}</span>\n                            </div>\n                            \n                        </div>\n                        <button onClick={() => handleClickD10()} className=\"d10-roller\">      \n                                D*10 \n                        </button> \n                        <div>\n                            <div className=\"cRow\">\n                                <h5>D10</h5>\n                                <div className=\"d10-numbers\">\n                                    <span>{state.D10Roll}</span>\n                                </div> \n                            </div>\n                            <div className=\"cRow\">   \n                                <h5>Total</h5>\n                                <div className=\"d10-numbers\">\n                                    <span>{state.randomD10}</span>\n                                </div>  \n                            </div>\n                        </div>\n                    </div>\n                </div>    \n                <div className=\"d100_chart_roller-container\">\n                    <h3>D*100 Success Chart</h3>\n                    <div className=\"\">\n                        <div className=\"\">\n                            <h5 className=\"\">Attributes</h5>\n                            <div className=\"\">\n                                <button className=\"d100_column-buttons attribute-buttons\" onClick={(e) => handleRank(e)} value={fight} name={\"Fight\"}>Fgt {fight}</button>\n                                <button className=\"d100_column-buttons attribute-buttons\" onClick={(e) => handleRank(e)} value={agility} name={\"Agility\"}>Agt {agility}</button>\n                                <button className=\"d100_column-buttons attribute-buttons\" onClick={(e) => handleRank(e)} value={strength} name={\"Strength\"}>Str {strength}</button>\n                                <button className=\"d100_column-buttons attribute-buttons\" onClick={(e) => handleRank(e)} value={endurance} name={\"Endurance\"}>End {endurance}</button>\n                                <button className=\"d100_column-buttons attribute-buttons\" onClick={(e) => handleRank(e)} value={reason} name={\"Reason\"}>Rsn {reason}</button>\n                                <button className=\"d100_column-buttons attribute-buttons\" onClick={(e) => handleRank(e)} value={intuition} name={\"Intuition\"}>Int {intuition}</button>\n                                <button className=\"d100_column-buttons attribute-buttons\" onClick={(e) => handleRank(e)} value={psyche} name={\"Psyche\"}>Psy {psyche}</button>\n                            </div>                \n                        </div>\n                        <div className=\"cRow\" >\n                            <div className=\"\">\n                                <h5>Super Powers</h5>\n                                {superPowersElement}\n                            </div>\n                            <div className=\"\">\n                                <h5>Talismans</h5>\n                                {talismansElement}\n                            </div>\n                        \n                        </div>\n                    </div>\n                    <div className=\"d100_modifiers-grid\">  \n                        <div className=\"\">\n                            <h5>Modifiers</h5> \n                            <div>\n                                <div className=\"cRow\">\n                                    <button name={\"20\"} onClick={(e) => handleClickAdd(e)} className=\"success-buttons-modifiers\" >+ 20 </button> \n                                    <button name={\"5\"} onClick={(e) => handleClickAdd(e)} className=\"success-buttons-modifiers\" > + 5 </button>\n                                    <button name={\"1\"} onClick={(e) => handleClickAdd(e)} className=\"success-buttons-modifiers\" > + 1 </button>\n                                </div>\n                                <div className=\"cRow\">     \n                                    <button name={\"-20\"} onClick={(e) => handleClickSubtract(e)} className=\"success-buttons-modifiers\" > - 20</button>\n                                    <button name={\"-5\"} onClick={(e) => handleClickSubtract(e)} className=\"success-buttons-modifiers\" > - 5</button>\n                                    <button name={\"-1\"} onClick={(e) => handleClickSubtract(e)} className=\"success-buttons-modifiers\" > - 1</button>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"\">\n                                <h5>Columns</h5>\n                                {chartColumnsElement}\n                        </div>\n                    </div>\n                    <div className=\"d100_result-container cRow\">\n                        <div>\n                            <h5>Fate O'Meter</h5>\n                            <div className={\"selected-rank_container\" + d100.score}>\n                                <span>{d100.score}</span>\n                            </div>\n                        </div>    \n                        <div>   \n                            <h5>D100 + Mods/Total</h5>\n                            <div className=\"selected-rank_container\">\n                                <span>{d100.D100Roll} + {count} / {d100.randomD100}</span>\n                            </div>\n                        </div>\n                        <div>\n                            <h5>Selected Rank</h5>\n                            <div className=\"selected-rank_container\">\n                                <span>{powerRank}</span>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"\">\n                        <button onClick={() => handleClickD100()}  className=\"d100-roller\"> D*100 </button>\n                        <button onClick={() => handleClickReset()} className=\"d100-roller\" >Reset </button>  \n                    </div>  \n                </div> \n            </div>\n        </div>\n        \n    )\n}\n\nconst chartColumns = [\n    {\n        id: uuidv4(),\n        value: 0,\n        name: 'De'\n    },\n    {\n        id: uuidv4(),\n        value: 1,\n        name: 'Fe'\n    },\n    {\n        id: uuidv4(),\n        value: 2,\n        name: 'Pr'\n    },\n    {\n        id: uuidv4(),\n        value: 3,\n        name: 'Ty'\n    },\n    {\n        id: uuidv4(),\n        value: 4,\n        name: 'Gd'\n    },\n    {\n        id: uuidv4(),\n        value: 5,\n        name: 'Ex'\n    },\n    {\n        id: uuidv4(),\n        value: 6,\n        name: 'Rm'\n    },\n    {\n        id: uuidv4(),\n        value: 7,\n        name: 'In'\n    },\n    {\n        id: uuidv4(),\n        value: 8,\n        name: 'Am'\n    },\n    {\n        id: uuidv4(),\n        value: 9,\n        name: 'Mn'\n    },\n    {\n        id: uuidv4(),\n        value: 10,\n        name: 'Un'\n    }\n]","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/JournalComponents/JournalEntryEdit.js",["293","294","295"],"import React, { useState, useContext, useEffect } from 'react'\nimport { JournalContext } from '../../../contexts/JournalContext'\n\nexport default function JournalEntryEdit({ journalEntry }) {\n    const [newEditDate, setNewEditDate] = useState(journalEntry.editDate)\n    const { handleJournalEntrySelect, handleJournalEntryChange } = useContext(JournalContext)\n\n    function handleChange( changes ){\n        handleJournalEntryChange(journalEntry.id, { ...journalEntry, ...changes })\n\n        console.log(changes)\n    }\n\n    return (\n        <div className=\"sticky-container\">\n            <div className=\"secondary_buttons-main_container\">\n                  <button onClick={() => handleJournalEntrySelect(undefined)}  className=\"secondary_buttons-main\">Close</button>\n            </div>\n          \n            <div className=\"edit_journal_background-container comic_style-container\">\n                <div>\n                    <label htmlFor=\"title\" className=\"edit_input_titles\">Title</label>\n                    <input \n                        type=\"text\"\n                        name=\"title\"\n                        value={journalEntry.title}\n                        onChange={e => handleChange({ title: e.target.value })}\n                        className=\"character-edit__input\"\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"body\" className=\"edit_input_titles \">Body</label>\n                    {console.log(journalEntry.body, \"this is body edit\")}\n                    <textarea\n                        type=\"text\" \n                        name=\"body\"\n                        value={journalEntry.body}\n                        onChange={e => handleChange({ body: e.target.value })}\n                        className=\"character-edit__input\"\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"editDate\" className=\"edit_input_titles \">Date Edited</label>\n                    <input \n                        type=\"text\"\n                        name=\"editDate\"\n                        value={Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}).format(journalEntry.editDate)}\n                        onChange={e => handleChange({ editDate: e.target.value })}\n                        readOnly={true}\n                    />\n                </div> \n            </div>\n        </div>\n    )\n}\n","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/ChartComponent/RankChart.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/JournalComponents/JournalEntryCardElement.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterEdit/CharacterCardEdit.js",["296"],"import React, { useContext } from 'react'\nimport { useCharacter } from '../../../contexts/CharacterContext'\nimport { Card } from 'react-bootstrap'\nimport Accordion from 'react-bootstrap/Accordion'\nimport { v4 as uuidv4 } from 'uuid'\nimport NameCardEdit from './CharacterEditComponents/NameCardEdit'\nimport SecondaryAttributeEdit from './CharacterEditComponents/SecondaryAttributeEdit'\nimport PrimaryAttributesEdit from './CharacterEditComponents/PrimaryAttributesEdit'\nimport PowerEdit from './CharacterEditComponents/PowerEdit'\nimport TalismanEdit from './CharacterEditComponents/TalismanEdit'\nimport PowerStuntEdit from './CharacterEditComponents/PowerStuntEdit'\nimport BackgroundsEdit from './CharacterEditComponents/BackgroundsEdit'\nimport MeritsEdit from './CharacterEditComponents/MeritsEdit'\nimport FlawsEdit from './CharacterEditComponents/FlawsEdit'\nimport EquipmentItemsEdit from './CharacterEditComponents/EquipmentItemsEdit'\nimport BashingCounterEdit from './CharacterEditComponents/BashingCounterEdit'\nimport ProtoniumCounterEdit from './CharacterEditComponents/ProtoniumCounterEdit'\nimport LethalCounterEdit from './CharacterEditComponents/LethalCounterEdit'\nimport CombatEdit from './CharacterEditComponents/CombatEdit'\nimport PhysicalEdit from './CharacterEditComponents/PhysicalEdit'\nimport ProfessionalEdit from './CharacterEditComponents/ProfessionalEdit'\nimport MentalEdit from './CharacterEditComponents/MentalEdit'\n\n\n\n\nexport default function CharacterCardEdit({ character }) {\n    const { handleCharacterSelect, handleCharacterChange} = useCharacter()\n\n    function handleChange( changes ){\n\n        handleCharacterChange(character.id, { ...character, ...changes })\n\n    }\n\n    function handleSecondaryAttributeChange (id, attribute){\n        const newSecondaryAttributes = [  ...character.secondaryAttributes  ]  // Makes a copy of attributes\n        const index = newSecondaryAttributes.findIndex( i => i.id === id)\n        newSecondaryAttributes[index] = attribute\n\n        handleChange({secondaryAttributes: newSecondaryAttributes})\n\n    }\n\n    function handlePrimaryAttributeChange (id, attribute){\n        const newPrimaryAttributes = [  ...character.primaryAttributes  ]  // Makes a copy of attributes\n        const index = newPrimaryAttributes.findIndex( i => i.id === id)\n        newPrimaryAttributes[index] = attribute\n\n        handleChange({primaryAttributes: newPrimaryAttributes})\n\n    }\n   \n     //CombatSkills Sections\n    function handleCombatSkillAdd(){\n        const newCombatSkill = {\n            id: uuidv4(),\n            name: '',\n            rank: 1\n        }\n\n        handleChange({ combatSkills: [...character.combatSkills, newCombatSkill] })\n    }\n\n    function handleCombatSkillChange(id, skill){\n        const newCombatSkills = [ ...character.combatSkills ]  //Makes a copy of CombatSkills\n        const index = newCombatSkills.findIndex( i => i.id === id)\n        newCombatSkills[index] = skill\n        handleChange( { combatSkills: newCombatSkills })\n    }\n\n    function handleCombatSkillDelete(id){\n        handleChange({\n            combatSkills: character.combatSkills.filter(i => i.id !== id)\n        })\n    }\n\n    //PhysicalSkills Sections\n    function handlePhysicalSkillAdd(){\n        const newPhysicalSkill = {\n            id: uuidv4(),\n            name: '',\n            rank: 1\n        }\n\n        handleChange({ physicalSkills: [...character.physicalSkills, newPhysicalSkill] })\n    }\n\n    function handlePhysicalSkillChange(id, skill){\n        const newPhysicalSkills = [ ...character.physicalSkills ]  //Makes a copy of PhysicalSkills\n        const index = newPhysicalSkills.findIndex( i => i.id === id)\n        newPhysicalSkills[index] = skill\n        handleChange( { physicalSkills: newPhysicalSkills })\n    }\n\n    function handlePhysicalSkillDelete(id){\n        handleChange({\n            physicalSkills: character.physicalSkills.filter(i => i.id !== id)\n        })\n    }\n\n    //ProfessionalSkills Sections\n    function handleProfessionalSkillAdd(){\n        const newProfessionalSkill = {\n            id: uuidv4(),\n            name: '',\n            rank: 1\n        }\n\n        handleChange({ professionalSkills: [...character.professionalSkills, newProfessionalSkill] })\n    }\n\n    function handleProfessionalSkillChange(id, skill){\n        const newProfessionalSkills = [ ...character.professionalSkills ]  //Makes a copy of Professional\n        const index = newProfessionalSkills.findIndex( i => i.id === id)\n        newProfessionalSkills[index] = skill\n        handleChange( { professionalSkills: newProfessionalSkills })\n    }\n\n    function handleProfessionalSkillDelete(id){\n        handleChange({\n            professionalSkills: character.professionalSkills.filter(i => i.id !== id)\n        })\n    }\n\n    //MentalSkills Sections\n    function handleMentalSkillAdd(){\n        const newMentalSkill = {\n            id: uuidv4(),\n            name: '',\n            rank: 1\n        }\n\n        handleChange({ mentalSkills: [...character.mentalSkills, newMentalSkill] })\n    }\n\n    function handleMentalSkillChange(id, skill){\n        const newMentalSkills = [ ...character.mentalSkills ]  //Makes a copy of PhysicalSkills\n        const index = newMentalSkills.findIndex( i => i.id === id)\n        newMentalSkills[index] = skill\n        handleChange( { mentalSkills: newMentalSkills })\n    }\n\n    function handleMentalSkillDelete(id){\n        handleChange({\n            mentalSkills: character.mentalSkills.filter(i => i.id !== id)\n        })\n    }\n    function handleBackgroundAdd(){\n        const newBackground = {\n            id: uuidv4(),\n            name: '',\n            rank: 1\n        }\n\n        handleChange({ backgrounds: [...character.backgrounds, newBackground] })\n    }\n\n    function handleBackgroundChange(id, background){\n        const newBackgrounds = [ ...character.backgrounds ]  //Makes a copy of Background Traits\n        const index = newBackgrounds.findIndex( i => i.id === id)\n        newBackgrounds[index] = background\n        handleChange( { backgrounds: newBackgrounds })\n    }\n\n    function handleBackgroundDelete(id){\n        handleChange({\n            backgrounds: character.backgrounds.filter(i => i.id !== id)\n        })\n    }\n\n    function handleMeritAdd(){\n        const newMerit = {\n            id: uuidv4(),\n            name: '',\n            rank: 1\n        }\n\n        handleChange({ merits: [...character.merits, newMerit] })\n    }\n\n    function handleMeritChange(id, merit){\n        const newMerits = [ ...character.merits ]  //Makes a copy of merits Traits\n        const index = newMerits.findIndex( i => i.id === id)\n        newMerits[index] = merit\n        handleChange( { merits: newMerits })\n    }\n\n    function handleMeritDelete(id){\n        handleChange({\n            merits: character.merits.filter(i => i.id !== id)\n        })\n    }\n\n    function handleFlawAdd(){\n        const newFlaw = {\n            id: uuidv4(),\n            name: '',\n            rank: 1\n        }\n\n        handleChange({ flaws: [...character.flaws, newFlaw] })\n    }\n\n    function handleFlawChange(id, flaw){\n        const newFlaws = [ ...character.flaws ]  //Makes a copy of flaws  Traits\n        const index = newFlaws.findIndex( i => i.id === id)\n        newFlaws[index] = flaw \n        handleChange( { flaws: newFlaws })\n    }\n\n    function handleFlawDelete(id){\n        handleChange({\n            flaws : character.flaws.filter(i => i.id !== id)\n        })\n    }\n   \n    //Power\n    function handlePowerAdd(){\n        const newPower = {\n            id: uuidv4(),\n            name: '',\n            rank: 1\n        }\n\n        handleChange({ powers: [...character.powers, newPower] })\n    }\n\n    function handlePowerChange(id, power){\n        const newPowers = [ ...character.powers ]  //Makes a copy of Powers\n        const index = newPowers.findIndex( i => i.id === id)\n        newPowers[index] = power\n        handleChange( { powers: newPowers})\n    }\n    function handlePowerDelete(id){\n        handleChange({\n            powers: character.powers.filter(i => i.id !== id)\n        })\n    }\n\n    //Talisman\n    function handleTalismanAdd(){\n        const newTalisman = {\n            id: uuidv4(),\n            name: '',\n            rank: 1,\n            description: \"What does this Talisman do?\"\n        }\n\n        handleChange({ talismans: [...character.talismans, newTalisman] })\n    }\n\n    function handleTalismanChange(id, talisman){\n        const newTalismans = [ ...character.talismans ]  //Makes a copy of Talisman\n        const index = newTalismans.findIndex( i => i.id === id)\n        newTalismans[index] = talisman\n        handleChange( { talismans: newTalismans})\n    }\n    function handleTalismanDelete(id){\n        handleChange({\n            talismans: character.talismans.filter(i => i.id !== id)\n        })\n    }\n\n    //Power Stunts\n    function handlePowerStuntAdd(){\n        const newPowerStunt = {\n            id: uuidv4(),\n            name: '',\n            rank: 0,\n            description: ''\n        }\n\n        handleChange({ powerStunts: [...character.powerStunts, newPowerStunt] })\n    }\n\n    function handlePowerStuntChange(id, powerStunt){\n        const newPowerStunts = [ ...character.powerStunts ]  //Makes a copy of Power Stunts\n        const index = newPowerStunts.findIndex( i => i.id === id)\n        newPowerStunts[index] = powerStunt\n        handleChange( { powerStunts: newPowerStunts})\n    }\n    function handlePowerStuntDelete(id){\n        handleChange({\n            powerStunts: character.powerStunts.filter(i => i.id !== id)\n        })\n    }\n\n    //Equipment Edit\n    function handleEquipmentItemAdd(){\n        const newEquipmentItem = {\n            id: uuidv4(),\n            name: '',\n            rank: 0,\n            description: ''\n        }\n\n        handleChange({ equipmentItems: [...character.equipmentItems, newEquipmentItem] })\n    }\n\n    function handleEquipmentItemChange(id, item){\n        const newEquipmentItems = [ ...character.equipmentItems ]  //Makes a copy of Equipment items\n        const index = newEquipmentItems.findIndex( i => i.id === id)\n        newEquipmentItems[index] = item\n        handleChange( { equipmentItems: newEquipmentItems})\n    }\n    function handleEquipmentItemDelete(id){\n        handleChange({\n            equipmentItems: character.equipmentItems.filter(i => i.id !== id)\n        })\n    }\n\n\n    //Protonium Counter\n\n    function handleProtoniumCountChange(id, count){\n        const newCount = [ ...character.protoniumCounter ]  //Makes a copy of Protonium Traits\n        const index = newCount.findIndex( i => i.id === id)\n        newCount[index] = count\n        handleChange( { protoniumCounter: newCount})\n    }\n\n     //Bashing Counter\n\n     function handleBashingCountChange(id, count){\n        const newCount = [ ...character.bashingCounter ]  //Makes a copy of Bashing Traits\n        const index = newCount.findIndex( i => i.id === id)\n        newCount[index] = count\n        handleChange( { bashingCounter: newCount})\n    }\n\n     //Lethal Counter\n\n     function handleLethalCountChange(id, count){\n        const newCount = [ ...character.lethalCounter ]  //Makes a copy of Lethal Traits\n        const index = newCount.findIndex( i => i.id === id)\n        newCount[index] = count\n        handleChange( { lethalCounter: newCount})\n    }\n\n    return (\n        <div className=\"sticky-container\">\n            <div>\n                <button \n                    onClick={() => handleCharacterSelect(undefined)}\n                    className=\"secondary_buttons-main\"\n                >\n                    Close\n                </button>\n            </div>\n            <Accordion>\n                <Card className=\"character-card-accordion\">\n                    <Accordion.Toggle as={Card.Header} eventKey=\"0\" className=\"accordion-card_header\">\n                        <span className=\"edit-character-card-title\">{character.name} : {character.alias}</span> \n                        <span className=\"edit-character-card-title_nature\">Nature </span>\n                        <span className=\"edit-character-card-nature\">{character.nature}</span>\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey=\"0\">\n                        <Card.Body className=\"black-background\">\n                            <Accordion> \n                                <NameCardEdit key={character.id} {...character} handleChange={handleChange} />\n                                <Card  className=\"character-card-accordion\">\n                                    <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n                                        <span>Primary &amp; Secondary Attributes</span>\n                                    </Accordion.Toggle>\n                                    <Accordion.Collapse eventKey=\"1\">\n                                        <Card.Body className=\"dark-background\">\n                                            <div className=\"grid_name_rank edit_input-container\">\n                                                <div>\n                                                    <div className=\"edit_titles\">Secondary Attributes</div>\n                                                    {character.secondaryAttributes.map(attribute => (\n                                                        <SecondaryAttributeEdit\n                                                            key={attribute.id} \n                                                            attribute={attribute}\n                                                            handleSecondaryAttributeChange={handleSecondaryAttributeChange}\n                                                        />\n                                                    ))}\n                                                </div>\n                                                <div >\n                                                    <div className=\"edit_titles\">Primary Attributes</div>\n                                                    {character.primaryAttributes.map(attribute => (\n                                                        <PrimaryAttributesEdit \n                                                            key={attribute.id} \n                                                            attribute={attribute}\n                                                            handlePrimaryAttributeChange={handlePrimaryAttributeChange}\n                                                        />\n                                                    ))}\n                                                </div>\n                                            </div>\n                                        </Card.Body>\n                                    </Accordion.Collapse>\n                                </Card>\n                                <Card  className=\"character-card-accordion\">\n                                    <Accordion.Toggle as={Card.Header} eventKey=\"2\" >\n                                        <span>Combat Skills</span>\n                                    </Accordion.Toggle>\n                                    <Accordion.Collapse eventKey=\"2\">\n                                        <Card.Body className=\"dark-background\">\n                                            <div>\n                                                {character.combatSkills.map(skill => (\n                                                    <CombatEdit\n                                                        key={skill.id}\n                                                        skill={skill} \n                                                        handleCombatSkillChange={handleCombatSkillChange}\n                                                        handleCombatSkillDelete={handleCombatSkillDelete}\n                                                        />\n                                                    ))\n                                                }\n                                                <button \n                                                    onClick={() => handleCombatSkillAdd()}\n                                                    className=\"add_button\"\n                                                >\n                                                    Add Skill\n                                                </button>\n                                            </div>\n                                        </Card.Body>\n                                    </Accordion.Collapse>\n                                </Card>\n                                <Card  className=\"character-card-accordion\">\n                                    <Accordion.Toggle as={Card.Header} eventKey=\"2.1\" >\n                                        <span>Physical Skills</span>\n                                    </Accordion.Toggle>\n                                    <Accordion.Collapse eventKey=\"2.1\">\n                                        <Card.Body className=\"dark-background\">\n                                            <div>\n                                                {character.physicalSkills.map(skill => (\n                                                    <PhysicalEdit\n                                                        key={skill.id}\n                                                        skill={skill} \n                                                        handlePhysicalSkillChange={handlePhysicalSkillChange}\n                                                        handlePhysicalSkillDelete={handlePhysicalSkillDelete}\n                                                        />\n                                                    ))\n                                                }\n                                                <button \n                                                    onClick={() => handlePhysicalSkillAdd()}\n                                                    className=\"add_button\"\n                                                >\n                                                    Add Skill\n                                                </button>\n                                            </div>\n                                        </Card.Body>\n                                    </Accordion.Collapse>\n                                </Card>\n                                \n                                <Card  className=\"character-card-accordion\">\n                                    <Accordion.Toggle as={Card.Header} eventKey=\"2.2\" >\n                                        <span>Professional Skills</span>\n                                    </Accordion.Toggle>\n                                    <Accordion.Collapse eventKey=\"2.2\">\n                                        <Card.Body className=\"dark-background\">\n                                            <div>\n                                                {character.professionalSkills.map(skill => (\n                                                    <ProfessionalEdit\n                                                        key={skill.id}\n                                                        skill={skill} \n                                                        handleProfessionalSkillChange={handleProfessionalSkillChange}\n                                                        handleProfessionalSkillDelete={handleProfessionalSkillDelete}\n                                                        />\n                                                    ))\n                                                }\n                                                <button \n                                                    onClick={() => handleProfessionalSkillAdd()}\n                                                    className=\"add_button\"\n                                                >\n                                                    Add Skill\n                                                </button>\n                                            </div>\n                                        </Card.Body>\n                                    </Accordion.Collapse>\n                                </Card>\n                                <Card  className=\"character-card-accordion\">\n                                    <Accordion.Toggle as={Card.Header}  eventKey=\"2.3\" >\n                                                <span>Mental Skills</span>\n                                    </Accordion.Toggle>\n                                    <Accordion.Collapse eventKey=\"2.3\">\n                                        <Card.Body className=\"dark-background\">\n                                            <div>\n                                                {character.mentalSkills.map(skill => (\n                                                <MentalEdit\n                                                    key={skill.id}\n                                                    skill={skill} \n                                                    handleMentalSkillChange={handleMentalSkillChange}\n                                                    handleMentalSkillDelete={handleMentalSkillDelete}\n                                                    />\n                                                ))\n                                                }\n                                                <button \n                                                    onClick={() => handleMentalSkillAdd()}\n                                                    className=\"add_button\"\n                                                >\n                                                    Add Skill\n                                                </button>\n                                            </div>\n                                        </Card.Body>\n                                    </Accordion.Collapse>\n                                </Card>\n                                <Card  className=\"character-card-accordion\">\n                                    <Accordion.Toggle as={Card.Header}  eventKey=\"3\" >\n                                                <span>Backgrounds</span>\n                                    </Accordion.Toggle>\n                                    <Accordion.Collapse eventKey=\"3\">\n                                        <Card.Body className=\"dark-background\">\n                                            <div>\n                                                {character.backgrounds.map(background => (\n                                                    <BackgroundsEdit\n                                                        key={background.id}\n                                                        background={background} \n                                                        handleBackgroundChange={handleBackgroundChange}\n                                                        handleBackgroundDelete={handleBackgroundDelete}\n                                                        />\n                                                    ))\n                                                }\n                                                <button \n                                                    onClick={() => handleBackgroundAdd()}\n                                                    className=\"add_button\"\n                                                    >Add Background</button>\n                                                \n                                            </div>\n                                        </Card.Body>\n                                    </Accordion.Collapse>\n                                </Card>\n                                <Card  className=\"character-card-accordion\"> \n                                    <Accordion.Toggle as={Card.Header} eventKey=\"3.1\" >\n                                                <span>Merits</span>\n                                    </Accordion.Toggle>\n                                    <Accordion.Collapse eventKey=\"3.1\">\n                                        <Card.Body className=\"dark-background\">\n                                                <div>\n                                                    {character.merits.map(merit => (\n                                                        <MeritsEdit\n                                                            key={merit.id}\n                                                            merit={merit} \n                                                            handleMeritChange={handleMeritChange}\n                                                            handleMeritDelete={handleMeritDelete}\n                                                            />\n                                                        ))\n                                                    }\n                                                    <button \n                                                        onClick={() => handleMeritAdd()}\n                                                        className=\"add_button\"\n                                                    >\n                                                        Add Merit\n                                                    </button>\n                                                </div>\n                                        </Card.Body>\n                                    </Accordion.Collapse>\n                                </Card>\n                                <Card  className=\"character-card-accordion\">\n                                    <Accordion.Toggle as={Card.Header}  eventKey=\"3.2\" >\n                                                <span>Flaws</span>\n                                    </Accordion.Toggle>\n                                    <Accordion.Collapse eventKey=\"3.2\">\n                                        <Card.Body className=\"dark-background\">\n                                        <div>\n                                            {character.flaws.map(flaw => (\n                                                <FlawsEdit\n                                                    key={flaw.id}\n                                                    flaw={flaw} \n                                                    handleFlawChange={handleFlawChange}\n                                                    handleFlawDelete={handleFlawDelete}\n                                                    />\n                                                ))\n                                            }\n                                            <button \n                                                onClick={() => handleFlawAdd()}\n                                                className=\"add_button\"\n                                            >\n                                                Add Flaw\n                                            </button>\n                                        </div>\n                                        </Card.Body>\n                                    </Accordion.Collapse>\n                                </Card>\n                                <Card  className=\"character-card-accordion\">\n                                    <Accordion.Toggle as={Card.Header} eventKey=\"4\" >\n                                        <span>Powers &amp; Talismans</span>\n                                    </Accordion.Toggle>\n                                    <Accordion.Collapse eventKey=\"4\">\n                                        <Card.Body className=\"dark-background\">\n                                            <div>\n                                                <div>\n                                                    {character.powers.map(power => (\n                                                        <PowerEdit\n                                                            key={power.id}\n                                                            power={power} \n                                                            handlePowerChange={handlePowerChange}\n                                                            handlePowerDelete={handlePowerDelete}\n                                                            />\n                                                        ))\n                                                    }\n                                                    <button \n                                                        onClick={() => handlePowerAdd()}\n                                                        className=\"add_button\"\n                                                    >\n                                                        Add Power\n                                                    </button>\n                                                </div>\n                                                <div>\n                                                    {character.talismans.map(talisman => (\n                                                        <TalismanEdit\n                                                            key={talisman.id}\n                                                            talisman={talisman} \n                                                            handleTalismanChange={handleTalismanChange}\n                                                            handleTalismanDelete={handleTalismanDelete}\n                                                            />\n                                                        ))\n                                                    }\n                                                    <button \n                                                        onClick={() => handleTalismanAdd()}\n                                                        className=\"add_button\"\n                                                    >\n                                                        Add Talisman\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </Card.Body>\n                                    </Accordion.Collapse>\n                                </Card>\n                                <Card  className=\"character-card-accordion\">\n                                    <Accordion.Toggle as={Card.Header} eventKey=\"5.1\">\n                                        <span>Power Stunts</span>\n                                    </Accordion.Toggle>\n                                    <Accordion.Collapse eventKey=\"5.1\">\n                                        <Card.Body className=\"dark-background\">\n                                            <div className=\"power_stunt-container\">\n                                                {character.powerStunts.map(powerStunt => (\n                                                        <PowerStuntEdit\n                                                            key={powerStunt.id}\n                                                            powerStunt={powerStunt} \n                                                            handlePowerStuntChange={handlePowerStuntChange}\n                                                            handlePowerStuntDelete={handlePowerStuntDelete}\n                                                            />\n                                                        ))\n                                                    }\n                                                    <button \n                                                        onClick={() => handlePowerStuntAdd()}\n                                                        className=\"add_button\"\n                                                    >\n                                                        Add Power Stunt\n                                                </button>\n                                            </div>\n                                        </Card.Body>\n                                    </Accordion.Collapse>\n                                </Card>\n                                <Card  className=\"character-card-accordion\">\n                                    <Accordion.Toggle as={Card.Header} eventKey=\"6\">\n                                                <span>Equipment Inventory</span>\n                                    </Accordion.Toggle>\n                                    <Accordion.Collapse eventKey=\"6\">\n                                        <Card.Body className=\"dark-background\">\n                                                <div>\n                                                    {character.equipmentItems.map(item => (\n                                                        <EquipmentItemsEdit\n                                                            key={item.id}\n                                                            item={item} \n                                                            handleEquipmentItemChange={handleEquipmentItemChange}\n                                                            handleEquipmentItemDelete={handleEquipmentItemDelete}\n                                                            />\n                                                        ))\n                                                    }\n                                                    <button \n                                                        onClick={() => handleEquipmentItemAdd()}\n                                                        className=\"add_button\"\n                                                    >\n                                                        Add Equipment Item\n                                                </button>\n                                                </div>\n                                        </Card.Body>\n                                    </Accordion.Collapse>\n                                </Card>\n                                <Card  className=\"character-card-accordion\">\n                                    <Accordion.Toggle as={Card.Header} eventKey=\"7\" >\n                                                <span>Counters: Health &amp; Protonium</span>\n                                    </Accordion.Toggle>\n                                    <Accordion.Collapse eventKey=\"7\">\n                                        <Card.Body className=\"dark-background\">\n                                            <div className=\"edit_input-container\">\n                                                {character.protoniumCounter.map(count => (\n                                                    <ProtoniumCounterEdit\n                                                        key={count.id}\n                                                        count={count}\n                                                        maxProtonium={character.secondaryAttributes[5]} \n                                                        handleProtoniumCountChange={handleProtoniumCountChange}\n                                                    />\n                                                    ))\n                                                }\n                                            </div>  \n                                            <div className=\"edit_input-container\">\n                                                <span className=\"input_titles\">Bashing</span>\n                                                {character.bashingCounter.map(count => (\n                                                    <BashingCounterEdit\n                                                        key={count.id}\n                                                        count={count} \n                                                        handleBashingCountChange={handleBashingCountChange}\n                                                    />\n                                                    ))\n                                                }\n                                            </div>\n                                            <div className=\"edit_input-container\">\n                                            <span className=\"input_titles\">Lethal</span>\n                                                {character.lethalCounter.map(count => (\n                                                    <LethalCounterEdit\n                                                        key={count.id}\n                                                        count={count}\n                                                        handleLethalCountChange={handleLethalCountChange}\n                                                    />\n                                                    ))\n                                                }\n                                            </div>\n                                        </Card.Body>\n                                    </Accordion.Collapse>\n                                </Card>    \n                            </Accordion>\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            </Accordion>\n        </div>\n    )\n}","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterComponents/SuccessRoller/ChartRanks.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterComponents/AccordionComponents/EquipmentCard.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterEdit/CharacterEditComponents/PhysicalEdit.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterEdit/CharacterEditComponents/ProtoniumCounterEdit.js",["297"],"import React from 'react'\n\nexport default function ProtoniumCounterEdit(props) {\n    const {\n        count,\n        maxProtonium,\n        handleProtoniumCountChange\n    } = props\n\n    \n    function handleChange( changes ){\n\n        handleProtoniumCountChange(count.id, { ...count, ...changes })\n    }\n\n    return (\n        <div className=\"grid_name_rank\">\n            <div>\n                <label htmlFor=\"counter\" className=\"input_titles\">{count.name}</label>\n                <input \n                    type=\"number\"\n                    name=\"counter\"\n                    value={count.value}\n                    onChange={(e) => handleChange( { value: parseInt(e.target.value) || '' } )}\n                    className=\"character-edit__input numbers\"\n                />\n            </div> \n            {/* <div>\n                <span className=\"input_titles\">Max Protonium</span>\n                <h5 className=\"input_titles\">{maxProtonium.rank}</h5>\n            </div> */}\n            \n        </div>\n    )\n}\n","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterEdit/CharacterEditComponents/MentalEdit.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterEdit/CharacterEditComponents/CombatEdit.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterEdit/CharacterEditComponents/LethalCounterEdit.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterEdit/CharacterEditComponents/ProfessionalEdit.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterComponents/AccordionComponents/List.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterEdit/CharacterEditComponents/EquipmentItemsEdit.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterEdit/CharacterEditComponents/BashingCounterEdit.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterEdit/CharacterEditComponents/MeritsEdit.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterEdit/CharacterEditComponents/PowerStuntEdit.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterEdit/CharacterEditComponents/FlawsEdit.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterEdit/CharacterEditComponents/BackgroundsEdit.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterEdit/CharacterEditComponents/PowerEdit.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterEdit/CharacterEditComponents/TalismanEdit.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterEdit/CharacterEditComponents/PrimaryAttributesEdit.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterComponents/AccordionComponents/Value.js",["298"],"import React from 'react'\n\nexport default function Level(props) {\n    const {\n        name,\n        value,\n    } = props\n\n    return (\n       <>\n            <span>{value}</span>\n       </>\n            \n    )\n}\n\n// check mark code &#10003;","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterComponents/AccordionComponents/Description.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterEdit/CharacterEditComponents/SecondaryAttributeEdit.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterComponents/SuccessRoller/TalismansRoller.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterComponents/SuccessRoller/SuperPowers.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterEdit/CharacterEditComponents/NameCardEdit.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/GameRulesComponents/GameBookCard.js",["299","300"],"import React, { useContext, useEffect } from 'react'\nimport { GameRulesContext } from '../../../contexts/GameRulesContext'\nimport { useProfile } from '../../../contexts/ProfileContext'\n\n\nexport default function GameRuleCard( props ) {\n    const {\n        id,\n        bookTitle,\n    } = props\n\n    const { profileData } = useProfile()\n    const { handleGameBookDelete, handleGameBookSelect } = useContext(GameRulesContext)\n\n    function handleDeleteWarning(id, name) {\n        const answer = window.confirm(`\"Are you sure you want to delete? ${name}\"`)\n\n        if(answer){\n            handleGameBookDelete(id)\n        } else{\n\n        }  \n    }\n\n    function handleEditDelete(){\n  \n        if (profileData?.editor == false){\n            console.log(profileData?.editor, \"Editing Rights\")\n            return \n\n        }\n\n        return (\n            <div>\n                <button onClick={() => handleDeleteWarning(id, bookTitle)}>Delete Book</button>\n            </div>\n        )\n    }\n\n    \n    return (\n        <div className=\"\">\n            <div>\n               <button key={id} className={\"coverPage-container\"} onClick={() => handleGameBookSelect(id)}>\n                    <div>\n                        <span>{bookTitle}</span>  \n                    </div>\n                </button> \n            </div>\n            {/* <div><button onClick={() => handleDeleteWarning(id, bookTitle)}>Delete Book</button></div> */}\n            {handleEditDelete()}\n        </div>\n    )\n}\n","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/GameRulesComponents/GameBookEdit.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterComponents/AccordionComponents/HealthProtoniumCounters.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterComponents/AccordionComponents/PowersTalismansPowerStunts.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterComponents/AccordionComponents/SkillsAccordionCard.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterComponents/AccordionComponents/BackgroundsMeritsFlaws.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/GameRulesComponents/GameBookComponents/Book.js",["301"],"import React, { useState, useContext } from 'react'\nimport { GameRulesContext } from '../../../../contexts/GameRulesContext'\nimport { useProfile } from '../../../../contexts/ProfileContext'\nimport Pages from './Pages'\n\n\nexport default function Book({ selectedBook }) {\n    const { profileData } = useProfile()\n     \n    const { handleGameRuleSelect, handleGameBookSelect } = useContext(GameRulesContext)\n\n    const [selectedPageParagraphId, setSelectedPageParagraphId] = useState()\n    const selectedPage = selectedBook.pages.find( paragraph => paragraph.id === selectedPageParagraphId )\n    \n    function handleSelectPageParagraph(id){\n        setSelectedPageParagraphId(id)\n    }\n\n    function handleSelect(id){\n        handleGameRuleSelect(id)\n        handleGameBookSelect(undefined)\n   \n    }\n\n    function handleEditDelete(){\n  \n        if (profileData?.editor == false){\n            console.log(profileData?.editor, \"Editing Rights\")\n            return \n\n        }\n\n        return (\n            <>\n                <button onClick={() => handleSelect(selectedBook.id)}>Edit</button>\n            </>\n        )\n    }\n\n    return (\n        <div className=\"sticky-container\">\n            <div>\n                <button onClick={() => handleGameBookSelect(undefined)} >Close</button>\n                {/* <button onClick={() => handleSelect(selectedBook.id)}>Edit</button> */}\n                {handleEditDelete()}\n            </div>\n            <div className=\"mainParagraph_container border-red\">\n                <h4>{selectedBook.bookTitle}</h4>\n                <ul>\n                    {selectedBook.pages.map(page=> {\n                        return <button onClick={() => handleSelectPageParagraph(page.id)}>{page.pageTitle}</button>\n                    })}\n                </ul>\n                <p>{selectedBook.mainParagraph}</p>\n                <div>\n                    {selectedPage && <Pages {...selectedPage} handleSelectPageParagraph={handleSelectPageParagraph} />}\n                </div>\n            </div>\n        </div>\n    )\n}","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/CharacterComponents/AccordionComponents/AttributesAccordionCard.js",[],["302","303"],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/GameRulesComponents/GameBookComponents/PagesEdit.js",[],"/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/GameRulesComponents/GameBookComponents/Pages.js",["304"],"import React from 'react'\n\nexport default function Pages(props) {\n    const {\n        id,\n        pageTitle,\n        paragraph,\n        handleSelectPageParagraph\n    } = props\n\n    function handleClick(){\n        handleSelectPageParagraph(undefined)\n    }\n\n    return (\n        <div className=\"page-container book-body\">\n            <div className=\"cRow\">\n                <h5>{pageTitle}</h5> <button onClick={() => handleClick()} >Close</button>\n            </div>\n            <div>\n                <p>{paragraph}</p>\n            </div>\n        </div>\n    )\n}\n","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/GameMasterComponents/PlayerCharactersCard.js",["305"],"import React from 'react'\nimport CharacterCard from './CharacterCard'\n\nexport default function PlayerCharactersCard({id, playerCharacter}) {\n    const characterData = JSON.stringify(playerCharacter)\n    return (\n        <div key={id} className=\"gmDashboard-Data_Card\">\n            <CharacterCard characters={playerCharacter} />\n        </div>\n    )\n}\n","/Users/dr_manhattan/ReactJS/HunterX/hunterx-prod/src/components/ProfileContainer/GameMasterComponents/CharacterCard.js",[],{"ruleId":"306","replacedBy":"307"},{"ruleId":"308","replacedBy":"309"},{"ruleId":"310","severity":1,"message":"311","line":14,"column":10,"nodeType":"312","messageId":"313","endLine":14,"endColumn":25},{"ruleId":"310","severity":1,"message":"314","line":1,"column":27,"nodeType":"312","messageId":"313","endLine":1,"endColumn":36},{"ruleId":"310","severity":1,"message":"315","line":5,"column":10,"nodeType":"312","messageId":"313","endLine":5,"endColumn":12},{"ruleId":"316","severity":1,"message":"317","line":35,"column":36,"nodeType":"318","messageId":"319","endLine":35,"endColumn":38},{"ruleId":"316","severity":1,"message":"317","line":53,"column":36,"nodeType":"318","messageId":"319","endLine":53,"endColumn":38},{"ruleId":"310","severity":1,"message":"315","line":2,"column":16,"nodeType":"312","messageId":"313","endLine":2,"endColumn":18},{"ruleId":"310","severity":1,"message":"320","line":1,"column":37,"nodeType":"312","messageId":"313","endLine":1,"endColumn":47},{"ruleId":"310","severity":1,"message":"321","line":14,"column":21,"nodeType":"312","messageId":"313","endLine":14,"endColumn":31},{"ruleId":"322","severity":1,"message":"323","line":37,"column":7,"nodeType":"324","endLine":37,"endColumn":9,"suggestions":"325"},{"ruleId":"316","severity":1,"message":"317","line":10,"column":36,"nodeType":"318","messageId":"319","endLine":10,"endColumn":38},{"ruleId":"310","severity":1,"message":"320","line":1,"column":17,"nodeType":"312","messageId":"313","endLine":1,"endColumn":27},{"ruleId":"316","severity":1,"message":"317","line":15,"column":33,"nodeType":"318","messageId":"319","endLine":15,"endColumn":35},{"ruleId":"310","severity":1,"message":"326","line":39,"column":12,"nodeType":"312","messageId":"313","endLine":39,"endColumn":16},{"ruleId":"310","severity":1,"message":"327","line":39,"column":18,"nodeType":"312","messageId":"313","endLine":39,"endColumn":25},{"ruleId":"310","severity":1,"message":"314","line":1,"column":39,"nodeType":"312","messageId":"313","endLine":1,"endColumn":48},{"ruleId":"310","severity":1,"message":"328","line":5,"column":12,"nodeType":"312","messageId":"313","endLine":5,"endColumn":23},{"ruleId":"310","severity":1,"message":"329","line":5,"column":25,"nodeType":"312","messageId":"313","endLine":5,"endColumn":39},{"ruleId":"310","severity":1,"message":"320","line":1,"column":17,"nodeType":"312","messageId":"313","endLine":1,"endColumn":27},{"ruleId":"310","severity":1,"message":"330","line":6,"column":9,"nodeType":"312","messageId":"313","endLine":6,"endColumn":21},{"ruleId":"310","severity":1,"message":"331","line":5,"column":9,"nodeType":"312","messageId":"313","endLine":5,"endColumn":13},{"ruleId":"310","severity":1,"message":"314","line":1,"column":29,"nodeType":"312","messageId":"313","endLine":1,"endColumn":38},{"ruleId":"316","severity":1,"message":"317","line":27,"column":33,"nodeType":"318","messageId":"319","endLine":27,"endColumn":35},{"ruleId":"316","severity":1,"message":"317","line":27,"column":33,"nodeType":"318","messageId":"319","endLine":27,"endColumn":35},{"ruleId":"306","replacedBy":"332"},{"ruleId":"308","replacedBy":"333"},{"ruleId":"310","severity":1,"message":"334","line":5,"column":9,"nodeType":"312","messageId":"313","endLine":5,"endColumn":11},{"ruleId":"310","severity":1,"message":"335","line":5,"column":11,"nodeType":"312","messageId":"313","endLine":5,"endColumn":24},"no-native-reassign",["336"],"no-negated-in-lhs",["337"],"no-unused-vars","'JournalProvider' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'db' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useContext' is defined but never used.","'setLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentUser'. Either include it or remove the dependency array.","ArrayExpression",["338"],"'fate' is assigned a value but never used.","'setFate' is assigned a value but never used.","'newEditDate' is assigned a value but never used.","'setNewEditDate' is assigned a value but never used.","'maxProtonium' is assigned a value but never used.","'name' is assigned a value but never used.",["336"],["337"],"'id' is assigned a value but never used.","'characterData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"339","fix":"340"},"Update the dependencies array to be: [currentUser]",{"range":"341","text":"342"},[1359,1361],"[currentUser]"]